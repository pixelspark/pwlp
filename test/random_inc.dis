0000.	e0	USER	get_length
0001.	20	PEEKB	0
0002.	11	PUSHB	[01]
0004.	81	BINARY	SUB
0005.	10	PUSHB	0
0006.	74	UNARY	SHL8
0007.	86	BINARY	OR
0008.	10	PUSHB	0
0009.	74	UNARY	SHL8
0010.	74	UNARY	SHL8
0011.	86	BINARY	OR
0012.	10	PUSHB	0
0013.	74	UNARY	SHL8
0014.	74	UNARY	SHL8
0015.	74	UNARY	SHL8
0016.	86	BINARY	OR
0017.	e3	USER	set_pixel
0018.	01	POP	1
0019.	71	UNARY	DEC
0020.	60	JNZ	to 1
0023.	01	POP	1
0024.	e0	USER	get_length
0025.	e5	USER	random_int
0026.	e0	USER	get_length
0027.	20	PEEKB	0
0028.	22	PEEKB	2
0029.	8c	BINARY	EQ
0030.	50	JZ	to 62
0033.	21	PEEKB	1
0034.	e6	USER	get_pixel
0035.	20	PEEKB	0
0036.	31	PUSHI	[00, ff, 00, 00]
0041.	85	BINARY	AND
0042.	75	UNARY	SHR8
0043.	23	PEEKB	3
0044.	21	PEEKB	1
0045.	11	PUSHB	[01]
0047.	80	BINARY	ADD
0048.	74	UNARY	SHL8
0049.	86	BINARY	OR
0050.	10	PUSHB	0
0051.	74	UNARY	SHL8
0052.	74	UNARY	SHL8
0053.	86	BINARY	OR
0054.	10	PUSHB	0
0055.	74	UNARY	SHL8
0056.	74	UNARY	SHL8
0057.	74	UNARY	SHL8
0058.	86	BINARY	OR
0059.	e3	USER	set_pixel
0060.	01	POP	1
0061.	02	POP	2
0062.	01	POP	1
0063.	71	UNARY	DEC
0064.	60	JNZ	to 27
0067.	01	POP	1
0068.	e4	USER	blit
0069.	01	POP	1
0070.	40	JMP	to 24

