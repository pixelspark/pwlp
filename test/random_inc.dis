0000.	e0	USER	get_length
0001.	20	PEEKB	0
0002.	11	PUSHB	[01]
0004.	81	BINARY	SUB
0005.	10	PUSHB	0
0006.	74	UNARY	SHL8
0007.	86	BINARY	OR
0008.	10	PUSHB	0
0009.	74	UNARY	SHL8
0010.	74	UNARY	SHL8
0011.	86	BINARY	OR
0012.	10	PUSHB	0
0013.	74	UNARY	SHL8
0014.	74	UNARY	SHL8
0015.	74	UNARY	SHL8
0016.	86	BINARY	OR
0017.	e3	USER	set_pixel
0018.	01	POP	1
0019.	71	UNARY	DEC
0020.	60	JNZ	to 1
0023.	01	POP	1
0024.	e0	USER	get_length
0025.	e5	USER	random_int
0026.	e0	USER	get_length
0027.	20	PEEKB	0
0028.	22	PEEKB	2
0029.	8c	BINARY	EQ
0030.	50	JZ	to 65
0033.	21	PEEKB	1
0034.	e6	USER	get_pixel
0035.	20	PEEKB	0
0036.	31	PUSHI	[00, ff, 00, 00]
0041.	85	BINARY	AND
0042.	75	UNARY	SHR8
0043.	23	PEEKB	3
0044.	21	PEEKB	1
0045.	11	PUSHB	[01]
0047.	80	BINARY	ADD
0048.	11	PUSHB	[ff]
0050.	85	BINARY	AND
0051.	74	UNARY	SHL8
0052.	86	BINARY	OR
0053.	10	PUSHB	0
0054.	74	UNARY	SHL8
0055.	74	UNARY	SHL8
0056.	86	BINARY	OR
0057.	10	PUSHB	0
0058.	74	UNARY	SHL8
0059.	74	UNARY	SHL8
0060.	74	UNARY	SHL8
0061.	86	BINARY	OR
0062.	e3	USER	set_pixel
0063.	01	POP	1
0064.	02	POP	2
0065.	01	POP	1
0066.	71	UNARY	DEC
0067.	60	JNZ	to 27
0070.	01	POP	1
0071.	e0	USER	get_length
0072.	e5	USER	random_int
0073.	e0	USER	get_length
0074.	20	PEEKB	0
0075.	22	PEEKB	2
0076.	8c	BINARY	EQ
0077.	50	JZ	to 112
0080.	21	PEEKB	1
0081.	e6	USER	get_pixel
0082.	20	PEEKB	0
0083.	31	PUSHI	[00, ff, 00, 00]
0088.	85	BINARY	AND
0089.	75	UNARY	SHR8
0090.	23	PEEKB	3
0091.	21	PEEKB	1
0092.	11	PUSHB	[01]
0094.	81	BINARY	SUB
0095.	11	PUSHB	[ff]
0097.	85	BINARY	AND
0098.	74	UNARY	SHL8
0099.	86	BINARY	OR
0100.	10	PUSHB	0
0101.	74	UNARY	SHL8
0102.	74	UNARY	SHL8
0103.	86	BINARY	OR
0104.	10	PUSHB	0
0105.	74	UNARY	SHL8
0106.	74	UNARY	SHL8
0107.	74	UNARY	SHL8
0108.	86	BINARY	OR
0109.	e3	USER	set_pixel
0110.	01	POP	1
0111.	02	POP	2
0112.	01	POP	1
0113.	71	UNARY	DEC
0114.	60	JNZ	to 74
0117.	01	POP	1
0118.	e4	USER	blit
0119.	fe	SPECIAL	yield
0120.	02	POP	2
0121.	40	JMP	to 24

